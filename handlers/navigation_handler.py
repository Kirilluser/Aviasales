from aiogram import Router, types
from aiogram.fsm.context import FSMContext
from handlers.flight_search_handler import search_flight_start
from handlers.hot_deals_handler import hot_deals_handler
from handlers.info_handler import info_handler
from handlers.weather_handler import weather_command
from handlers.attractions_handler import attractions_command
from handlers.profile_handler import profile_handler
from keyboards.main_keyboard import main_keyboard
from keyboards.personal_keyboard import personal_keyboard
import json

router = Router()

@router.message(lambda message: message.text == "‚úà –ù–∞–π—Ç–∏ –±–∏–ª–µ—Ç")
async def find_ticket_via_button(message: types.Message, state: FSMContext):
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–∏—Å–∫–∞ –±–∏–ª–µ—Ç–æ–≤ –Ω–∞–ø—Ä—è–º—É—é, –≤—ã–∑—ã–≤–∞—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∏—Å–∫–∞
    await search_flight_start(message, state)

@router.message(lambda message: message.text == "üî• –ì–æ—Ä—è—á–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è")
async def hot_deals_via_button(message: types.Message, state: FSMContext):
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –≥–æ—Ä—è—á–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –Ω–∞–ø—Ä—è–º—É—é
    await hot_deals_handler(message, state)

@router.message(lambda message: message.text == "üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")
async def profile_via_button(message: types.Message, state: FSMContext):
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –Ω–∞–ø—Ä—è–º—É—é
    await profile_handler(message)
@router.message(lambda message: message.text == "‚Ñπ –ò–Ω—Ñ–æ")
async def info_via_button(message: types.Message, state: FSMContext):
    await info_handler(message)

@router.message(lambda message: message.text == "üìÉ –ò—Å—Ç–æ—Ä–∏—è")
async def history_via_button(message: types.Message):
    # –ß–∏—Ç–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –∑–∞–ø—Ä–æ—Å–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞ history.json
    try:
        with open("history.json", "r", encoding="utf-8") as f:
            history = json.load(f)
        user_history = history.get(str(message.from_user.id), "–ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞.")
        await message.answer(f"–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤:\n{user_history}", reply_markup=main_keyboard)
    except Exception:
        await message.answer("–ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞.", reply_markup=main_keyboard)

@router.message(lambda message: message.text == "‚õÖ–ü–æ–≥–æ–¥–∞")
async def weather_button_handler(message: types.Message, state: FSMContext):
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
    await state.clear()
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã:")
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –≤–≤–æ–¥–∞ –≥–æ—Ä–æ–¥–∞
    await state.set_state("weather:waiting_for_city")

@router.message(lambda message: message.text == "üìç–î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏")
async def attractions_button_handler(message: types.Message, state: FSMContext):
    await state.clear()
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è—Ö:")
    await state.set_state("attractions:waiting_for_city")

@router.message(lambda message: message.text == "‚öô –ü–æ–¥–¥–µ—Ä–∂–∫–∞")
async def support_via_button(message: types.Message):
    await message.answer("–ù–∞—à –±–æ—Ç ‚Äî –ø–ª–æ–¥ —Ç—Ä—É–¥–∞ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ —ç–Ω—Ç—É–∑–∏–∞—Å—Ç–∞, –≤–¥–æ—Ö–Ω–æ–≤–ª—ë–Ω–Ω–æ–≥–æ –∏–¥–µ–µ–π —Å–¥–µ–ª–∞—Ç—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ. –ú—ã –Ω–µ—É—Å—Ç–∞–Ω–Ω–æ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É–µ–º –Ω–∞—à —Å–µ—Ä–≤–∏—Å, —á—Ç–æ–±—ã –ø–æ–∏—Å–∫ –ª—É—á—à–∏—Ö –∞–≤–∏–∞–±–∏–ª–µ—Ç–æ–≤ –±—ã–ª –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ—Å—Ç—ã–º –∏ –±—ã—Å—Ç—Ä—ã–º –¥–ª—è –≤–∞—Å.\n–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º, —á—Ç–æ –æ—Å—Ç–∞–µ—Ç–µ—Å—å —Å –Ω–∞–º–∏!\n–ö–æ–Ω—Ç–∞–∫—Ç—ã —Å–ª—É–∂–±—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏:\n      üÜî@NarrativeLive\n      üîó+77710007777\n      üì¨kolomieckirill38@gmail.com\n      üìç—É–ª. –ß–µ—Ä–Ω—ã—à–µ–≤—Å–∫–æ–≥–æ, 59",reply_markup=main_keyboard)
    resources_text = (
        "<b>–°–æ—Ü —Å–µ—Ç–∏ –∞–≤—Ç–æ—Ä–∞:</b>\n"
        "‚Ä¢ <a href='https://t.me/NarrativeLive'>Telegram</a>\n"
        "‚Ä¢ <a href='https://www.linkedin.com/in/kirill-kolomiyets-ab2a9a2b5/'>LinkedIn</a>\n"
        "‚Ä¢ <a href='https://github.com/Kirilluser'>GitHub</a>\n"
        "‚Ä¢ <a href='https://x.com/Narrative_Live'>Twitter</a>\n"

    )
    await message.answer(resources_text, parse_mode="HTML")

